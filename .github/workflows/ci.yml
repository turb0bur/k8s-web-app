name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'k8s/**'
      - 'README.md'
      - 'docker-compose.yml'
      - '.env.example'
      - '.github/workflows/cd.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ vars.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ vars.DB_NAME }}
        ports:
          - ${{ vars.DB_PORT }}:5432
        options: >-
          --health-cmd="pg_isready -U ${{ vars.DB_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r web/requirements.txt \
                      -r tests/requirements.txt

      - name: Run Tests
        env:
          DB_HOST: localhost
          DB_PORT: ${{ vars.DB_PORT }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: pytest tests

  docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: build_image
        run: |
          SHORT_SHA=${{ github.sha }} && SHORT_SHA=${SHORT_SHA::7}
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --platform linux/amd64,linux/arm64 \
            --tag ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPOSITORY }}:${SHORT_SHA} \
            --push \
            web/
