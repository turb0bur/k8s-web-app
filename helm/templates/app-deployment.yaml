apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.deployment.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.app.deployment.replicas }}
  selector:
    matchLabels:
      {{ include "appLabels" . }}
  template:
    metadata:
      labels:
        {{ include "appLabels" . }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z {{ .Values.db.service.name }} {{ .Values.db.service.port }}; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: python-web-app
        image: {{ .Values.app.deployment.image.repository }}:{{ .Values.app.deployment.image.tag }}
        imagePullPolicy: {{ .Values.app.deployment.image.pullPolicy }}
        resources:
          requests:
            memory: {{ .Values.app.deployment.resources.requests.memory }}
            cpu: {{ .Values.app.deployment.resources.requests.cpu }}
          limits:
            memory: {{ .Values.app.deployment.resources.limits.memory }}
            cpu: {{ .Values.app.deployment.resources.limits.cpu }}
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: SECRET_KEY
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
